# Contract

## Contract: Response
Contract response digunakan sebagai panduan format data response yang dikirimkan dari Backend, serta panduan pembacaan untuk UI. Response kiriman yang tidak sesuai dengan contract ini tidak akan dikenali oleh pihak yang lain.

Saat UI melakukan request ke API, maka API akan mengembalikan response yang nantinya akan diolah/dirender oleh UI dan disajikan ke browser. Jadi reponse adalah balikan yang dikirimkan API kepada UI.
Reponse dikirimkan menggunakan format [JSend](https://labs.omniti.com/labs/jsend).

#### Struktur Data
	 response
	  |_ status
	  |_ message
	  |_ code
	  |_ data

Keterangan : 

1. Status : status response. Ada 3 opsi nilai status yakni success, fail, dan error.
2. Message : pesan error yang dikirimkan bila reponse tidak dalam status success. Data message hanya akan dikirimkan bila status response adalah error.
3. Code : kode error. Data message hanya akan dikirimkan bila status response adalah error.
4. Data : adalah data yang dikirimkan oleh API sebagai produk dari request dari UI.


## Contract: Backend
Contract untuk backend digunakan sebagai panduan menyusun (formatting) data yang dikirimkan ke UI sehingga data tersebut dapat diterjamahkan oleh Component. Pengiriman data yang tidak sesuai dengan kontrak akan menyebabkan data tidak ditampilkan dengan benar.

[Contract](https://github.com/ThunderID/ThunderContract/blob/master/Backend/general.mdown)

## Contract: UI
Contract untuk backend digunakan sebagai panduan dalam pembuatan UI component (pembacaan parameter dari APi yang diterima dan juga parameter yang digunakan untuk melakukan kustomisasi component).

[Contract](https://github.com/ThunderID/ThunderContract/blob/master/UI/general.mdown)

Notes:
	element : representasi dari markup yang dikirimkan API
	component : adalah wadah dari satu atau beberapa element. Component juga dapat membantu untuk transformasi data 

## Contract: Element
Contract ini berisi daftar element serta requirement dari element tersebut. Contract ini digunakan oleh API sebagai format pengiriman data(markup) serta digunakan UI(dalam pembuatan element)

Contoh element adalah : input string (input dengan type string)

[Contract]()

## Contract: Component
Contract ini berisi daftar dari component yang dapat digunakan oleh UI. Backend tidak perlu mengetahui element yang dikirimkan akan direpresentasikan dalam bentuk apa, oleh karena itu API tidak akan mengirimkan data component. Ui lah yang bertanggung jawab memilih component apa yang akan digunakan dalam merepresentasikan data element dari API 

Contoh: 
element input string dalam component bernama input_component

[Contract]()
