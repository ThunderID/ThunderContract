## Page Create
Contract format data dari backend ke UI untuk requet halaman Create.

#### Struktur Utuh Data

	Data 
	 |_ Page Info
	 |_ Page Data
	     |_ Group of Elements
		 	|_ Header
		 	|_ Data
		     	|_ Element Description
				 
KETERANGAN:

1. Group of Element : digunakan untuk mengelompokkan element2 data (misal: Input Kontak didalamnya ada element form input telepon, email, dan alamat)
2. Header : digunakan untuk mendaftarkan element untuk di tranformasi ke html object
3. Data : array dari element yang merepresentasikan data yang dikirimkan
4. Element Description : deskripsi / identitas dari data element tersebut (Lihat Contract Element untuk daftar element yang tersedia)

#### Format pengiriman data

	[
	    'page_info' => [
	        'id' => Id data yang dikirim (set null jika tidak ada)
	    ],
	    'page_data' => [
	        NAMA GROUP => [
	            'header'=> array dari nama field yang akan ditampilkan
	            'data' => [
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ],  
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ], 
	                dst....
	            ]
	        ],
	        NAMA GROUP => [
	            'header'=> array dari nama field yang akan ditampilkan
	            'data' => [
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ],  
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ], 
	                dst....
	            ]
	        ],
	        dst....	
	    ]
	]

KETERANGAN :

1. Nama Group : bernilai string dari nama group input element. 
2. Nama Field : bernilai string dari nama field data yang dikirimkan
3. Untuk Nama Group dan Nama Field harus menggunakan Snake Text Format
4. Pendaftaran element dengan mencantumkan nama dari element di-header bersifat Case Sensitive. Jadi jika element yang akan ditampilkan bernama 'umur' maka didalam header juga harus didaftarkan sebagai 'umur'.
5. Untuk daftar element yang dapat digunakan, format parameter yang dikirimkan, serta penggunaan silahkan lihat Contract Element

FAQ :

1. Apa semua data request create harus mengikuti format diatas? Iya, karena ini adalah contract yang sudah disepakati.
2. Bila ada parameter yang tidak dapat di-isi karena memang data yang diminta tidak tersedia? parameter di-set dengan nilai null (KECUALI untuk nama field dan nama group). 

#### Contoh Penggunaan :

	[
	    'page_info' => [
	        'id' => null
	    ],
	    'page_data' => [
	        'input_profil' => [
	            'header'=> ['nama','umur']
	            'data' => [
	                'nama' => [
	                    'element-class'      => 'input',
	                    'element-type'       => 'string',
	                    'element-properties' =>  [
	                        'value'      => null,
	                        'validation' => ['required' => true]
	                    ]
	                ],  
	                'umur' => [
	                    'element-class'      => 'input',
	                    'element-type'       => 'number',
	                    'element-properties' =>  [
	                        'value'      => null,
	                        'validation' => []
	                    ]
	                ], 
	                'gender' => [
	                    'element-class'      => 'input',
	                    'element-type'       => 'select',
	                    'element-properties' =>  [
	                        'value'      => null,
	                        'validation' => ['required' => true]
	                    ]
	                ],
	            ]
	        ],
	        'input_kontak' => [
	            'header'=> ['alamat', 'Phone']
	            'data' => [
	                'alamat' => [
	                    'element-class'      => 'input',
	                    'element-type'       => 'text',
	                    'element-properties' =>  [
	                        'value'      => null,
	                        'validation' => []
	                    ]
	                ],  
	                'phone' => [
	                    'element-class'      => 'input',
	                    'element-type'       => 'string',
	                    'element-properties' =>  [
	                        'value'      => null,
	                        'validation' => []
	                    ]
	                ]
	            ]
	        ]
	    ]
	]

KETERANGAN

1. Pada group input_profil, terdapat data element gender. Namun, karena tidak terdaftar di-header maka gender tidak akan ditampilkan meskipun dia memiliki validasi (property dari element)
2. Pada group input_kontak, element phone tidak akan tertampil karena di header yang didaftarkan adalah 'Phone', sedangkan pada data element adalah 'phone' (baca: case sensitive)

#### Catatan

	Data yang dikirimkan akan mengikuti format Jsend. 
	Contoh diatas menggunakan format array hanya untuk memudahkan pembacaan data saja.
