#Backend

Contract ini digunakan sebagai format data yang akan dikirimkan dari API ke UI (dengan wrapper JSend format).

	 response
	  |_ status
	  |_ message
	  |_ code
	  |_ data <- Contract ini digunakan untuk menyeragamkan yang dikirimkan melalui parameter ini (data)

Data yang akan dikirimkan dibagi kedalam beberapa jenis dan menyesuaikan dari halaman/request yang dikirimkan. Adapun pembagiannya adalah sebagai berikut: 

## 1. Page Create
Contract format data dari backend ke UI untuk requet halaman Create.

#### Struktur Data

	Data 
	 |_ Page Info
	 |_ Page Data
	 	 |_ Group of Elements
	 	 	 |_ Header
	 	 	 |_ Data
	 	 	 	 |_ Element Description
				 
KETERANGAN:

1. Page info : array yang berisi data mengenai informasi halaman (misal id)
2. Page data : array yang berisi data hasil request yang diterima oleh API. Data adalah kumpulan (group) dari beberapa element yang didalamnya merepresentasikan field data yang sesuai dengan kebutuhan API.

#### Format pengiriman data

	[
	    'page_info' => [
	        'id' => Id data yang dikirim (set null jika tidak ada)
	    ],
	    'page_data' => [
	        NAMA GROUP => [
	            'header'=> array dari nama field yang akan ditampilkan
	            'data' => [
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ],  
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ], 
	                dst....
	            ]
	        ],
	        NAMA GROUP => [
	            'header'=> array dari nama field yang akan ditampilkan
	            'data' => [
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ],  
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ], 
	                dst....
	            ]
	        ],
	        dst....	
	    ]
	]

KETERANGAN :

1. Nama Group : bernilai string dari nama group input element. 
2. Nama Field : bernilai string dari nama field data yang dikirimkan
